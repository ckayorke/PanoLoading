@model PanoLoading.Models.Project

@{
    ViewBag.Title = "ProjectEdit";
}
<style>
    .btn:hover{
         background-color: #112d5d;
         color: white;
    }
</style>

<h2>ProjectEdit</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("State", (Model.ProjectStates as List<SelectListItem>), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>       
       
        @*<div class="form-group">
            @Html.LabelFor(model => model.ProjectStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectStatus, "", new { @class = "text-danger" })
            </div>
        </div>*@   
        
        <div class="form-group">
            @Html.LabelFor(model => model.StatusName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StatusName", (Model.StatusNameList as List<SelectListItem>), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusName, "", new { @class = "text-danger" })
            </div>
        </div> 
        
           

        <div class="form-group">
            @Html.LabelFor(model => model.Fielder, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("Fielder", (Model.Fielders as List<SelectListItem>), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Fielder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Drawer, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("Drawer", (Model.Fielders as List<SelectListItem>), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Drawer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Notes, new { cols = 60, rows = 10, @class = "form-control" })              
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Resolution, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("Resolution", (Model.Resolutions as List<SelectListItem>), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Resolution, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ProjectList", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
